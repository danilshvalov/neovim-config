snippet beg "begin{} / end{}" bA
\begin{$1}
	$0
\end{$1}
endsnippet

snippet mk "Math" wA
\(${1}\)`!p
if t[2] and t[2][0] not in [',', '.', '?', '-', ' ']:
    snip.rv = ' '
else:
    snip.rv = ''
`$2
endsnippet

snippet dm "Math" wA
\[
$1
\]
endsnippet

snippet '([A-Za-z])(\d)' "auto subscript" wrA
`!p snip.rv = match.group(1)`_`!p snip.rv = match.group(2)`
endsnippet

snippet '([A-Za-z])_(\d\d)' "auto subscript2" wrA
`!p snip.rv = match.group(1)`_{`!p snip.rv = match.group(2)`}
endsnippet

snippet -> "to" wA
\to
endsnippet

snippet <= "leq" wA 
\leq
endsnippet

snippet >= "geq" wA
\geq
endsnippet

snippet != "neq" wA
\neq
endsnippet

snippet inf "infty" wA
\infty
endsnippet

snippet lim "lim" wA
\lim_{$1}{$2}$0
endsnippet

snippet sqr "sqrt" wA
\sqrt{$1}$0
endsnippet

snippet fr "frac" wA
\frac{$1}{$2}$0
endsnippet

snippet dfr "dfrac" wA
\dfrac{$1}{$2}$0
endsnippet

snippet asi "arcsin" w
\arcsin{$1}$0
endsnippet

snippet aco "arccos" w
\arccos{$1}$0
endsnippet

snippet atg "arctg" wA
\arctg{$1}$0
endsnippet

snippet actg "arcctg" wA
\arcctg{$1}$0
endsnippet

snippet => "implies" wA
\implies
endsnippet

snippet // "Fraction simple" A
\frac{$1}{$2}$0
endsnippet

snippet bf "textbf" wA
\textbf{$1}
endsnippet

snippet def "definition" wA
\begin{definition}
	$1
\end{definition}
endsnippet

snippet vmat "vmatrix" wA
\begin{vmatrix}
	$1
\end{vmatrix}
endsnippet

snippet '((\d+)|(\d*)(\\)?([A-Za-z]+)((\^|_)(\{\d+\}|\d))*)/' "Fraction" wrA
\\frac{`!p snip.rv = match.group(1)`}{$1}$0
endsnippet

snippet vec "vector" wA
\overrightarrow{$1}
endsnippet

snippet * "cdot" wA
\cdot
endsnippet

snippet \a "alpha" w
\alpha
endsnippet

snippet \b "beta" w
\beta
endsnippet

snippet '\\d' "delta" wr
\Delta
endsnippet
